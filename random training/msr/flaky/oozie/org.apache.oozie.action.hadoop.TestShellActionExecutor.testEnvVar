getJobTrackerUri
getName
<exec>sh</exec>
createContext
 Submit the action
<capture-output />
context
create
action
<argument>script.sh</argument>
write
waitFor
<job-tracker>
#
ae
ls -ltr
echo var1=$var1
echo var2=$var2
</job-tracker>
getFileSystem
check
script
<name-node>
</name-node>
stringToProperties
<file>
submitAction
 Checking action data from shell script output
script.sh
evaluate
PropertiesUtils
<argument>A</argument>
 Wait for the external job to
getAppPath
 Create the script file with canned shell command
fs
<env-var>var2=
<env-var>var1=val1</env-var>
actionXml
</env-var>
<shell>
</file>
end
var2
close
getData
a=b;c=d
getNameNodeUri
launcherJob
 finish
getProperty
shellScript
<argument>-c</argument>
testEnvVar
getAction
assertEquals
</shell>
w
<argument>B</argument>
envValueHavingEqualSign
 Create sample shell action xml
toString
isComplete
