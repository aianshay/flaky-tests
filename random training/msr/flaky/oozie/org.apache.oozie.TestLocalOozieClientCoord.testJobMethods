
<execution>LIFO</execution> </controls> <datasets> 
testJobMethods
LocalOozie
conf
xmlns="uri:oozie:coordinator:0.1"> <controls> <timeout>10</timeout> <concurrency>1</concurrency> 
run
</input-events> 
<app-path>hdfs:///tmp/workflows/</app-path> 
</property></configuration> </workflow> </action> </coordinator-app>
getCoordClient
file://
getTestCaseDir
<coordinator-app name="NAME" frequency="${coord:minutes(20)}" 
<output-events> <data-out name="LOCAL_A" dataset="local_a"> 
timezone="UTC"> <uri-template>file:///tmp/coord/workflows/${YEAR}/${DAY}</uri-template> </dataset> 
suspend
<configuration> <property> <name>inputA</name> <value>${coord:dataIn('A')}</value> </property> 
list
NAME
OozieClient
jobId
size
</datasets> <input-events> 
setProperty
createConfiguration
job
File
start="2009-02-01T01:00Z" end="2009-02-03T23:59Z" timezone="UTC" 
submit
getCoordJobsInfo
appPath
writeToFile
appXml
jobId0
 Just in case, check that there are no Coord job records left by previous tests:
<property> <name>inputB</name> <value>${coord:dataOut('LOCAL_A')}</value> 
getCoordJobInfo
client
<instance>${coord:current(-1)}</instance> </data-out> </output-events> <action> <workflow> 
<dataset name="local_a" frequency="${coord:minutes(20)}" initial-instance="2009-02-01T01:00Z" 
<dataset name="a" frequency="${coord:minutes(20)}" initial-instance="2009-02-01T01:00Z" 
resume
coordinator.xml
getAppName
appName
assertEquals
kill
list0
<data-in name="A" dataset="a"> <instance>${coord:latest(0)}</instance> </data-in>  
