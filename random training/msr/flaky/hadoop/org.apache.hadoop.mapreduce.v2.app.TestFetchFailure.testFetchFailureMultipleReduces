Event status not correct for map attempt1
getClass
Event status not correct for map attempt2
reduceTask
copyOfRange
getName
Event status not correct for reduce attempt1
Map TaskAttempt state not correct
conf
getMapAttemptCompletionEvents
getStatus
 send the done signal to the second map attempt
mapEvents
getAttempts
assertArrayEquals
iterator
Assert
atIt
Event reduce attempt id not correct
sendFetchFailure
 wait for map Task state move back to RUNNING
JobState
 send 3 fetch failures from reduce to trigger map re execution
reduceAttempt
convertedEvents
events
 send done to reduce
app
reduceTask2
 map attempt must have become FAILED
getEventHandler
Num completion events not correct
Event map attempt id not correct
getID
handle
it
reduceTask3
size
TaskAttemptState
 send the done signal to the map attempt
Unexpected map event
MRJobConfig
 previous completion event now becomes obsolete
Unexpected map events
job
Arrays
next
getTaskAttemptCompletionEvents
Phase
submit
values
 wait for reduce to start running
TaskAttemptCompletionEventStatus
 wait for map success
 We should not re-launch the map task yet
waitForState
Num tasks not correct
TaskAttemptEventType
 all maps would be running
getAttemptId
mapAttempt1
mapAttempt2
fromYarn
mapTask
testFetchFailureMultipleReduces
 sequential, single-task-attempt approach in uber-AM, so disable:
assertEquals
Event status not correct
Num attempts in Map Task not correct
TypeConverter
reduceAttempt2
getState
getTasks
updateStatus
reduceAttempt3
TaskState
getContext
setBoolean
 wait for Task state move to RUNNING
Incorrect number of map events
