cluster
Checking for file 
 Choose 3 copies of block file - delete 1 and corrupt the remaining 2
conf
dfsClient
fileCount
waitActive
 first time format
waitForBlockReplication
 only 3 copies exist
getBlockFile
len
getNamenode
create
block
buffer
write
info
localhost
Deleting file 
DFSConfigKeys
dfs.datanode.block.write.timeout.sec
LOG
format
getFileSystem
0.75f
testFile
dnIndex
numDataNodes
 get first block of the file.
 corrupt it.
Long
getNameNodePort
shutdown
getBlockLocations
Restarting minicluster after deleting a replica and corrupting 2 crcs
rw
Corrupting file 
seek
delete
out
blockFile
testPendingReplicationRetry
assertTrue
get
close
/replication-test-file
getBlock
blockOut
set
MiniDFSCluster
length
 This test makes sure that NameNode retries all the available blocks 
   * for under replicated blocks. 
   * 
   * It creates a file with one block and replication of 4. It corrupts 
   * two of the blocks and removes one of the replicas. Expected behavior is
   * that missing replica will be copied from one valid source.
   
assertEquals
 Start the MiniDFSCluster with more datanodes since once a writeBlock
       * to a datanode node fails, same block can not be written to it
       * immediately. In our case some replication attempts will fail.
       
Integer
testPath
build
exists
toString
