postponeResponse
getAndIncrement
 increasing
Server
conf
sendResponse
Executors
 trigger last waiting call
 was consumed
Assert
 make sure it blocked
assertNotNull
TimeUnit
val
 make sure it's still blocked
count
 trigger responses
getConnectAddress
fail
future1
ex
future2
stop
ADDRESS
exec
server
wait
submit
assertFalse
waitingCalls
 the background calls should still be blocked
get
client
 use only 1 handler to prove it's freed after every call
unexpected exception:
wait0
set
address
 do a call in the background that will have a deferred response
 call 4: sendResponse, expect it to return
wait1
wait2
start
assertEquals
getCurCall
newCachedThreadPool
isDone
call
NetUtils
deferredCall
waitCount
TestIPCServerResponder
ipc shouldn't have responded
 another call with wait count of 2
testDeferResponse
 call should return immediately
