
caching of data. Renaming of file may be helpful. We can have a loop that reads with
dictionary with care for distributation of words is under development.




none
minBlockSize
 * Timing includes open/closing of files.
System
 * We need to mitigate cache effect on benchmark. We can apply several 
 * Data is generated as random bytes. Other methods e.g. using 
keyLength
 * Timing includes reading both Key and Value
SequenceFile

+++++++

Which is the same for Sequence File and HFile. Another possibility is to generate 
ideas, for next step we do a large dummy read between benchmark read to dismantle 
testRunComparisons




Notes: 
e
timeReading
 the same method several times and flood cache every time and average it to get a
getMessage
test data beforehand
****************************** Sequence File *****************************
----------------------
rows
Skipping sequencefile gz: 
timeWrite
gz
 better number.
 * Timing of write currently, includes random value/key generations. 
valueLength
****************************** HFile *****************************
HFile
